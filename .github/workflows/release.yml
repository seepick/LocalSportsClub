name: Create releases on tags

on:
  push:
    tags:
      - '*'

jobs:
  prepare-release:
    # runs-on: ubuntu-latest
    name: Creating the release first
    steps:
      - name: Create Release # https://github.com/marketplace/actions/create-tag-release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: No changelog provided
          draft: false
          prerelease: false
    outputs:
      upload-url: ${{ steps.create_release.outputs.upload_url }}

  build-and-upload:
    runs-on: [ macos-latest, windows-latest ]
    needs: prepare-release
    name: Building and uploading compose artifact
    steps:
      - run: echo "This job is now running on a ${{ runner.os }} server. Ref is ${{ github.ref }} and RefName ${{ github.ref_name }}"
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle build
        run: ./gradlew packageDistributionForCurrentOS -Plsc.version=${{ github.ref_name }} -Plsc.gcalClientId=${{ secrets.GCAL_CLIENT_ID }} -Plsc.gcalClientSecret=${{ secrets.GCAL_CLIENT_SECRET }}

      - name: Upload Release Asset for Windows
        if: runner.os == 'Windows'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare-release.outputs.upload-url }}
          asset_path: build/compose/binaries/main/exe/LocalSportsClub-${{ github.ref_name }}.exe
          asset_name: LocalSportsClub.exe
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Upload Release Asset for MacOS
        if: runner.os == 'macOS'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare-release.outputs.upload-url }}
          # /Users/runner/work/LocalSportsClub/LocalSportsClub/build/compose/binaries/main/dmg/LocalSportsClub-1.0.2.dmg
          asset_path: build/compose/binaries/main/dmg/LocalSportsClub-${{ github.ref_name }}.dmg
          asset_name: LocalSportsClub.dmg
          asset_content_type: application/x-apple-diskimage
